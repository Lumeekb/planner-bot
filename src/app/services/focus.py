import datetime as dt
from zoneinfo import ZoneInfo
from apscheduler.triggers.date import DateTrigger

from ..bot import bot
from ..scheduler import scheduler
from ..services.users import get_user_by_tg

async def start_focus_cycle(tg_id: int, work_min: int = 50, break_min: int = 10):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–ø—Ä–∏–Ω—Ç: work_min —Ä–∞–±–æ—Ç—ã, break_min –ø–µ—Ä–µ—Ä—ã–≤."""
    user = await get_user_by_tg(tg_id)
    tz = ZoneInfo(user.tz if user and user.tz else "Europe/Helsinki")
    now = dt.datetime.now(tz)

    await bot.send_message(tg_id, f"‚è± –°–ø—Ä–∏–Ω—Ç –Ω–∞—á–∞—Ç: {work_min} –º–∏–Ω —Ñ–æ–∫—É—Å–∞. –¢–µ–ª–µ—Ñ–æ–Ω ‚Äî –≤ —Å—Ç–æ—Ä–æ–Ω—É.")

    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –ø–µ—Ä–µ—Ä—ã–≤–∞
    work_end = now + dt.timedelta(minutes=work_min)
    scheduler.add_job(
        bot.send_message,
        trigger=DateTrigger(run_date=work_end),
        args=[tg_id, f"üßò –ü–µ—Ä–µ—Ä—ã–≤ {break_min} –º–∏–Ω. –í—Å—Ç–∞–Ω—å, —Ä–∞–∑–º–∏–Ω–∫–∞/–≤–æ–¥–∞/–≥–ª–∞–∑–∞."]
    )

    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø–µ—Ä–µ—Ä—ã–≤–∞
    break_end = work_end + dt.timedelta(minutes=break_min)
    scheduler.add_job(
        bot.send_message,
        trigger=DateTrigger(run_date=break_end),
        args=[tg_id, "üöÄ –ü–µ—Ä–µ—Ä—ã–≤ –æ–∫–æ–Ω—á–µ–Ω. –í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –∫ —Ñ–æ–∫—É—Å—É."]
    )

